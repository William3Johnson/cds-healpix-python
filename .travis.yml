dist: xenial   # required for Python >= 3.7
language: python
python:
  - "3.7"

env:
  global:
    - TWINE_USERNAME=bmatthieu3
    - DOCKER_IMAGE_LINUX_32=daald/ubuntu32:xenial
    - DOCKER_CONTAINER_LINUX_32=linux32_container
    - DOCKER_CONTAINER_DEPLOY_DOC=deploy_doc
# Define the order of the stages
stages:
  - test
  # Stage reponsible for building and publishing the wheels
  # to PyPI. Architecture supported:
  # - manylinux1_i686 py2.7/py3.4->3.7
  # - manylinux1_x86_64 py2.7/py3.4->3.7
  # - osx py2.7/py3.4->3.7
  - name: deploy
    if: tag IS present

jobs:
  include:
    #### TESTING STAGE ####
    - stage: test
      # - linux
      name: "Python3 linux_x86"
      os: linux
      env:
        - PIP=pip3
        - PYTHON=python3
      script: ./travis/testing.sh
      # - linux 32bit
    - name: "Python3 linux_i686"
      os: linux
      services:
        - docker
      before_install:
        - docker pull "${DOCKER_IMAGE_LINUX_32}"
        - >
          docker run
          --volume ${PWD}:/mnt/cdshealpix
          --name "${DOCKER_CONTAINER_LINUX_32}"
          --rm
          --interactive
          --tty
          --detach
          "${DOCKER_IMAGE_LINUX_32}"
      before_script:
      script:
        - >
          docker exec 
          --interactive
          --tty
          "${DOCKER_CONTAINER_LINUX_32}"
          sh -c "cd /mnt/cdshealpix && ./travis/testing_py3_ubuntu_32.sh"
      # - MacOS
    - name: "Python3 OSX"
      os: osx
      python: 3.7
      language: generic
      env:
        - PIP=pip3
        - PYTHON=python3
      script: ./travis/testing.sh
    - name: "Build docs"
      os: linux
      env:
        - PIP=pip3
        - PYTHON=python3
      script: ./travis/build_docs.sh
    #### DEPLOYING STAGE ####
    - stage: deploy
      name: "Update doc to gh-pages"
      os: linux
      services:
        - docker
      before_install:
        - docker pull ubuntu
        - >
          docker run
          --volume ${PWD}:/mnt/cdshealpix
          --name "${DOCKER_CONTAINER_DEPLOY_DOC}"
          --rm
          --interactive
          --tty
          --detach
          ubuntu
      script:
        - >
          docker exec 
          --interactive
          --tty
          --env GH_EMAIL="${GH_EMAIL}"
          --env GH_NAME="${GH_NAME}"
          --env GH_TOKEN="${GH_TOKEN}"
          "${DOCKER_CONTAINER_DEPLOY_DOC}"
          sh -c "cd /mnt/cdshealpix && ./travis/deploy_doc.sh"
    - name: "manylinux1_x86_64"
      # Job generating the wheels for Linux 32-bit platforms
      os: linux
      sudo: required
      env:
        - CIBW_SKIP="*manylinux1_i686* cp34-* cp27-*"
        - PIP=pip
        - PYTHON=python3
      services:
        # We use docker for generating the wheels for Linux.
        - docker
      script: ./travis/deploy.sh
    - name: "manylinux1_i686"
      # Job generating the wheels for Linux 64-bit platforms
      os: linux
      sudo: required
      env:
        - CIBW_SKIP="*manylinux1_x86_64* cp34-* cp27-*"
        - PIP=pip
        - PYTHON=python3
      services:
        # We use docker for generating the wheels for Linux.
        - docker
      script: ./travis/deploy.sh
    - name: "OSX"
      os: osx
      sudo: required
      language: generic
      env:
        - CIBW_SKIP="cp27-* cp34-*"
        - PIP=pip2
        - PYTHON=python2
      script: ./travis/deploy.sh
